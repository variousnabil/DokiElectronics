/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dokielectronics;

import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class CashierProgram extends javax.swing.JFrame {

    /**
     * Creates new form CashierProgram
     */
    ManageProduct mp = new ManageProduct();
    Order order = new Order();
    DefaultTableModel model2 = new DefaultTableModel(new String[]{"Order Number", "Product ID", "Unit Price", "Quantity", "Discount"}, 0);    
    DefaultTableModel model1 = new DefaultTableModel(new String[]{"Product ID", "Product Name", "Unit Price", "Stock", "Category"}, 0);  
    ResultSet rs;
    PreparedStatement ps;
    Statement st;
    private int flag = 0;
    private String queryTblProduct = "SELECT * FROM Products";
    private double total = 0;
    int Qty = 0;
    double Discount;
    
   
    
    
    public CashierProgram() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Cashier Program");
        ShowProductInJTable();
        ShowOrderDetailInJTable();
    }
    
    // Display Data in JTable :
    // 1 - Fill Array list with the data 
    public ArrayList<Product> getProductList(){
        
        ArrayList<Product> productList = new ArrayList<Product>();
        try {  
            //connecting java with database
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1/doki_electronics", "root", "");
            
            //filter category
            if(flag==1){
                if(txtFilter.getText().equals("1") || txtFilter.getText().equals("2") || txtFilter.getText().equals("3")){
                    setQueryTblProduct("SELECT * FROM Products WHERE CategoryID = ?");
                }
            }
            
            ps = con.prepareStatement(getQueryTblProduct());
            //filter category
            if(txtFilter.getText().equals("1")){
                ps.setInt(1, 1);
            } else if(txtFilter.getText().equals("2")){
                ps.setInt(1, 2);
            } else if(txtFilter.getText().equals("3")){
                ps.setInt(1, 3);
            }
            rs = ps.executeQuery();
            Product product;
            
            while(rs.next()){
                product = new Product(rs.getInt("ProductID"),rs.getString("ProductName"),rs.getString("Description"),rs.getInt("UnitPrice"),rs.getInt("Stock"),rs.getBytes("Picture"),rs.getInt("CategoryID"));
                productList.add(product); 
            }
        }
        catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } catch (ClassNotFoundException ex) {
            System.out.println(ex.getMessage());
        }
        return productList;
    } 
    
    // 2 - Populate the JTable
    public void ShowProductInJTable(){
        ArrayList<Product> list = getProductList();
        
        Object[] row = new Object[5];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getPid();
            row[1] = list.get(i).getPname();
            row[2] = "Rp. " + list.get(i).getPprice();
            row[3] = list.get(i).getPstock();
            row[4] = list.get(i).getPcatid();
            
            model1.addRow(row);
        }
    }
    
    //insert order detail table
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrderDetail = new javax.swing.JTable();
        txtFilter = new javax.swing.JTextField();
        lblShoppingCart = new javax.swing.JLabel();
        lblFilter = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1262, 676));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblProduct.setModel(model1);
        jScrollPane1.setViewportView(tblProduct);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 500, 490));

        tblOrderDetail.setModel(model2);
        jScrollPane2.setViewportView(tblOrderDetail);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 90, 530, 490));

        txtFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFilterActionPerformed(evt);
            }
        });
        txtFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFilterKeyTyped(evt);
            }
        });
        getContentPane().add(txtFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 100, 140, 40));

        lblShoppingCart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblShoppingCartMouseClicked(evt);
            }
        });
        getContentPane().add(lblShoppingCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 280, 130, 50));

        lblFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFilterMouseClicked(evt);
            }
        });
        getContentPane().add(lblFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 150, 80, 40));

        lblTotal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTotalMouseClicked(evt);
            }
        });
        getContentPane().add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 620, 150, 40));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Cashier_Doki.png"))); // NOI18N
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFilterActionPerformed

    private void txtFilterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterKeyTyped
        
    }//GEN-LAST:event_txtFilterKeyTyped

    private void lblShoppingCartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblShoppingCartMouseClicked
        int index = tblProduct.getSelectedRow();
        String sQty;
        try {
            sQty = JOptionPane.showInputDialog("Quantity : ");
            Qty = Integer.parseInt(sQty);
            if (getProductList().get(index).getPstock()<Qty) {
                Qty=0;
                JOptionPane.showMessageDialog(null, "the stock is not enough for your order!");
            }
            calculateDiscount();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "please enter valid number");
        }
        if(Qty!=0){
            try {            
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1/doki_electronics", "root", "");
                
                PreparedStatement ps = con.prepareStatement("INSERT INTO order_details(OrderNumber,ProductID,UnitPrice,Quantity,Discount) VALUES(?,?,?,?,?)");
                ps.setInt(1, order.getOrderNum()-1);
                ps.setInt(2, mp.getProductList().get(index).getPid());
                ps.setDouble(3, mp.getProductList().get(index).getPprice());
                ps.setInt(4, Qty);
                ps.setDouble(5, Discount);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "data has been saved");
                DefaultTableModel model2 = (DefaultTableModel)tblOrderDetail.getModel();
                model2.setRowCount(0);
                ShowOrderDetailInJTable();
                DefaultTableModel model1 = (DefaultTableModel)tblProduct.getModel();
                model1.setRowCount(0);
                ShowProductInJTable();
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CashierProgram.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(CashierProgram.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_lblShoppingCartMouseClicked

    private void lblFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFilterMouseClicked
        DefaultTableModel model1 = (DefaultTableModel)tblProduct.getModel();
        setFlag(1);
        model1.setRowCount(0);
        ShowProductInJTable();
    }//GEN-LAST:event_lblFilterMouseClicked

    private void lblTotalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTotalMouseClicked
       Invoice invoice = new Invoice();
       invoice.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_lblTotalMouseClicked
    
    // Display Data in JTable :
    // 1 - Fill Array list with the data 
    public ArrayList<OrderDetail> getOrderDetailList(){
        
        ArrayList<OrderDetail> orderdetailList = new ArrayList<OrderDetail>();
        try {  
            //connecting java with database
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1/doki_electronics", "root", "");
            String query = "SELECT * FROM order_details WHERE OrderNumber = ?";
          
            ps = con.prepareStatement(query);
            ps.setInt(1, order.getOrderNum()-1);
            rs = ps.executeQuery();
            OrderDetail orderdetail;
            
            while(rs.next()){
                orderdetail = new OrderDetail(rs.getInt("OrderNumber"),rs.getInt("ProductID"),rs.getDouble("UnitPrice"),rs.getInt("Quantity"),rs.getDouble("Discount"));
                orderdetailList.add(orderdetail);
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(CashierProgram.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CashierProgram.class.getName()).log(Level.SEVERE, null, ex);
        }
        return orderdetailList;
    } 
    
    // 2 - Populate the JTable
    public void ShowOrderDetailInJTable(){
        ArrayList<OrderDetail> list = getOrderDetailList();
        
        Object[] row = new Object[5];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getOrderNumber();
            row[1] = list.get(i).getProductID();
            row[2] = "Rp. " + list.get(i).getUnitPrice();
            row[3] = list.get(i).getQuantity();
            row[4] = list.get(i).getDiscount()==0.05 ? "5%" : "30%";
            //total price
            double tempDiscount = list.get(i).getUnitPrice()*list.get(i).getQuantity()*list.get(i).getDiscount();
//            System.out.println(String.format("%.2f",tempDiscount));
            double tempTotal = list.get(i).getUnitPrice()*list.get(i).getQuantity() - tempDiscount;
//            System.out.println(String.format("%.2f", tempTotal));
            total=tempTotal+total;
            
            
            model2.addRow(row);
        }
    }
    
    public void calculateDiscount(){
        if(Qty >= 5){
            Discount=0.3;
        } else{
            Discount=0.05;
        }
    }
    
    public void setFlag(int flag) {
        this.flag = flag;
    }

    public String getQueryTblProduct() {
        return queryTblProduct;
    }

    public void setQueryTblProduct(String queryTblProduct) {
        this.queryTblProduct = queryTblProduct;
    }

    public double getTotal() {
        return total;
    }

    public void setTotal(int total) {
        this.total = total;
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashierProgram().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblFilter;
    private javax.swing.JLabel lblShoppingCart;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblOrderDetail;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables
}
