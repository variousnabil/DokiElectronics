/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dokielectronics;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class Invoice extends javax.swing.JFrame {

    /**
     * Creates new form Invoice
     */
    DefaultTableModel model = new DefaultTableModel(new String[]{"Order Number", "Product ID", "Unit Price", "Quantity","Discount"}, 0);    
    ResultSet rs;
    PreparedStatement ps;
    Statement st;
    Order order = new Order();
    CashierProgram CP = new CashierProgram();
    private int OrderNum;
    
    public Invoice() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Invoice");
        ShowOrderDetailInJTable();
        txtTotal.setText("Rp. " + String.format("%.2f", CP.getTotal()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        txtTotal = new javax.swing.JTextField();
        lblNewOrder = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(628, 500));
        setMinimumSize(new java.awt.Dimension(628, 461));
        setPreferredSize(new java.awt.Dimension(628, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(model);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 480, 300));

        jButton1.setText("New Order");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(948, 379, -1, -1));

        txtTotal.setEditable(false);
        getContentPane().add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 200, 30));

        lblNewOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNewOrderMouseClicked(evt);
            }
        });
        getContentPane().add(lblNewOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 400, 170, 40));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/invoice_doki.png"))); // NOI18N
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblNewOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNewOrderMouseClicked
        this.dispose();
        order.setVisible(true);
    }//GEN-LAST:event_lblNewOrderMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Invoice().setVisible(true);
            }
        });
    }
    // Display Data in JTable :
    // 1 - Fill Array list with the data 
    public ArrayList<OrderDetail> getOrderDetailList(){
        
        ArrayList<OrderDetail> orderdetailList = new ArrayList<OrderDetail>();
        try {  
            //connecting java with database
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1/doki_electronics", "root", "");
            String query = "SELECT * FROM order_details WHERE OrderNumber = ?";
          
            ps = con.prepareStatement(query);
            ps.setInt(1, order.getOrderNum()-1);
            rs = ps.executeQuery();
            OrderDetail orderdetail;
            
            while(rs.next()){
                orderdetail = new OrderDetail(rs.getInt("OrderNumber"),rs.getInt("ProductID"),rs.getInt("UnitPrice"),rs.getInt("Quantity"),rs.getDouble("Discount"));
                orderdetailList.add(orderdetail);
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(CashierProgram.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CashierProgram.class.getName()).log(Level.SEVERE, null, ex);
        }
        return orderdetailList;
    } 
    
    // 2 - Populate the JTable
    public void ShowOrderDetailInJTable(){
        ArrayList<OrderDetail> list = getOrderDetailList();
        
        Object[] row = new Object[5];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getOrderNumber();
            row[1] = list.get(i).getProductID();
            row[2] = "Rp. " + list.get(i).getUnitPrice();
            row[3] = list.get(i).getQuantity();
            row[4] = list.get(i).getDiscount()==0.05 ? "5%" : "30%";
            
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblNewOrder;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
